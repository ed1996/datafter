//
// Tables
// --------------------------------------------------

table {
  background-color: $table-bg;
}

caption {
  padding-top: $table-cell-padding;
  padding-bottom: $table-cell-padding;
  color: $text-muted;
  text-align: left;
}

th {
  text-align: left;
}

// Baseline styles

.table {
  width: 100%;
  max-width: 100%;
  margin-bottom: $line-height-computed;
  // Cells
  > thead,
  > tbody,
  > tfoot {
    > tr {
      > th,
      > td {
        padding: 19px 29px;
        line-height: $line-height-base;
        vertical-align: middle;
        border-bottom: 1px solid $table-border-color;
        border-top: none;
      }
      > td {
        padding: 13px 29px;
      }
    }
  }
  &-2{
   >tbody > tr > td{
      padding: 9px 29px;
    }
  }
  // Bottom align for column headings
  > thead > tr > th {
    vertical-align: bottom;
    border-bottom: none;
  }
  // Remove top border from thead by default
  > caption + thead,
  > colgroup + thead,
  > thead:first-child {
    > tr:first-child {
      > th,
      > td {
        border-top: 0;
      }
    }
  }
  // Account for multiple tbody instances
  > tbody + tbody {
    border-top: 2px solid $table-border-color;
  }

  // Nesting
  .table {
    background-color: $body-bg;
  }
}

// Condensed table w/ half padding

.table-condensed {
  > thead,
  > tbody,
  > tfoot {
    > tr {
      > th,
      > td {
        padding: $table-condensed-cell-padding;
      }
    }
  }
}

// Bordered version
//
// Add borders all around the table and between all the columns.

.table-bordered {
  border: 1px solid $table-border-color;
  > thead,
  > tbody,
  > tfoot {
    > tr {
      > th,
      > td {
        border: 1px solid $table-border-color;
      }
    }
  }
  > thead > tr {
    > th,
    > td {
      border-bottom-width: 2px;
    }
  }
}

// Zebra-striping
//
// Default zebra-stripe styles (alternating gray and transparent backgrounds)

.table-striped {
  > tbody > tr:nth-of-type(even) {
    background-color: #f3f3f3;
  }
  > tbody > tr:nth-of-type(odd) {
    background-color: transparent;
  }
  &-variant-2{
    > tbody > tr:nth-of-type(odd) {
      background-color: #f3f3f3;
    }
    > tbody > tr:nth-of-type(even) {
      background-color: transparent;
    }
  }
}

// Hover effect
//
// Placed here since it has to come after the potential zebra striping

.table-hover {
  > tbody > tr:hover {
    background-color: $table-bg-hover;
  }
}

// Table cell sizing
//
// Reset default table behavior

table col[class*="col-"] {
  position: static; // Prevent border hiding in Firefox and IE9-11 (see https://github.com/twbs/bootstrap/issues/11623)
  float: none;
  display: table-column;
}

table {
  td,
  th {
    &[class*="col-"] {
      position: static; // Prevent border hiding in Firefox and IE9-11 (see https://github.com/twbs/bootstrap/issues/11623)
      float: none;
      display: table-cell;
    }
  }
}

// Table backgrounds
//
// Exact selectors below required to override `.table-striped` and prevent
// inheritance to nested tables.

// Generate the contextual variants
@include table-row-variant('active', $table-bg-active);
@include table-row-variant('success', $state-success-bg);
@include table-row-variant('info', $state-info-bg);
@include table-row-variant('warning', $state-warning-bg);
@include table-row-variant('danger', $state-danger-bg);

// Responsive tables
//
// Wrap your tables in `.table-responsive` and we'll make them mobile friendly
// by enabling horizontal scrolling. Only applies <768px. Everything above that
// will display normally.

.table-responsive {
  overflow-x: auto;
  min-height: 0.01%; // Workaround for IE9 bug (see https://github.com/twbs/bootstrap/issues/14837)

  @media screen and (max-width: $screen-xs-max) {
    width: 100%;
    margin-bottom: ($line-height-computed * 0.75);
    overflow-y: hidden;
    -ms-overflow-style: -ms-autohiding-scrollbar;
    border: 1px solid $table-border-color;

    // Tighten up spacing
    > .table {
      margin-bottom: 0;

      // Ensure the content doesn't wrap
      > thead,
      > tbody,
      > tfoot {
        > tr {
          > th,
          > td {
            white-space: nowrap;
          }
        }
      }
    }

    // Special overrides for the bordered tables
    > .table-bordered {
      border: 0;

      // Nuke the appropriate borders so that the parent can handle them
      > thead,
      > tbody,
      > tfoot {
        > tr {
          > th:first-child,
          > td:first-child {
            border-left: 0;
          }
          > th:last-child,
          > td:last-child {
            border-right: 0;
          }
        }
      }

      // Only nuke the last row's bottom-border in `tbody` and `tfoot` since
      // chances are there will be only one `tr` in a `thead` and that would
      // remove the border altogether.
      > tbody,
      > tfoot {
        > tr:last-child {
          > th,
          > td {
            border-bottom: 0;
          }
        }
      }

    }
  }
}

.table-primary {
  thead {
    color: $white;
    background-color: $brand-primary;
  }
  &-variant-2{
      tbody > tr:last-of-type > td{
        border:none;
        padding: 13px 5px;
      }
    td:nth-of-type(n+2){
      text-align: center;
    }
  }
}

.table-light {
  thead {
    background-color: #f3f3f3;
    color: $black;
  }
  tbody > tr > td {
    border-bottom: 1px solid #f3f3f3;
  }
}
.table-dark {
  thead {
    background-color: $color-ebony-clay;
    color: $white;
  }
  tbody > tr > td {
    border-bottom: none;
  }
}

@media (max-width: $screen-sm-min - 1) {
  .table-mobile {
    thead {
      display: none;
    }
    tr {
      position: relative;
      display: inline-block;
      width: 100%;
    }

    td {
      float: left;
      display: inline-block;
      text-align: center;
      &:first-of-type {
        width: 100%;

      }
      &:nth-child(n+2) {
        width: 50%;
      }
      &:last-of-type {
        position: relative;
        width: 100%;
        &:before {
          position: absolute;
          top: 0;
          left: 50%;
          @include transform(translateX(-50%));
          content: '';
          display: inline-block;
          height: 0;
          width: 0;
          border: solid transparent;
          //border-color: rgba(112, 34, 213, 0);
          border-top-color: $table-border-color;
          border-width: 8px;
          pointer-events: none;
        }
        &:after {
          position: absolute;
          top: -1px;
          left: 50%;
          @include transform(translateX(-50%));
          content: '';
          display: inline-block;
          height: 0;
          width: 0;
          border: solid transparent;
          border-top-color: $body-bg;
          border-width: 8px;
          pointer-events: none;
        }
      }
    }
    .table-primary {
      tr {
        td:first-of-type {
          color: $white;
          font-weight: 700;
          background-color: $brand-primary;
        }
      }
    }
    .table-light {
      tr {
        td:first-of-type {
          color: $gray-base;
          font-weight: 700;
          background-color: #f3f3f3;
        }
        td:last-of-type {
          &:before {
            border-top-color: #f3f3f3;
          }
        }
        &:hover {
          background-color: inherit;
        }
      }
    }
    .table-dark {
      tr {
        td:first-of-type {
          color: $white;
          font-weight: 700;
          background-color: $color-ebony-clay;
        }
        td {
          border-bottom: 1px solid $table-border-color;
        }
        &:nth-of-type(even) {
          td {
            &:after {
              border-top-color: #f3f3f3;
            }
          }
        }
      }
    }
  }
}
